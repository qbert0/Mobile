generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String     @id @default(uuid())
  phone   String
  email   String     @unique
  postion Postion
  account Custumer[] @relation("customer")
  doctor  Doctor?
  nurfe   Nurfe?
}

model Custumer {
  id         String    @id @default(uuid())
  firstName  String
  lastName   String
  age        String
  sex        Sex
  address    String
  userId     String
  user       User      @relation("customer", fields: [userId], references: [id])
  listOrder  Order[]   @relation("customerOrder")
  listFile   Profile[] @relation("customerProfile")
  listThread Thread[]  @relation("customerThread")
}

model Doctor {
  id        String  @id @default(uuid())
  name      String
  major     String
  userId    String  @unique
  user      User    @relation(fields: [userId], references: [id])
  listOrder Order[] @relation("doctorOrdered")
}

model Nurfe {
  id         String   @id @default(uuid())
  userId     String   @unique
  user       User     @relation(fields: [userId], references: [id])
  listThread Thread[] @relation("nurfeThread")
}

model Order {
  id       String   @id @default(uuid())
  createAt DateTime @default(now())
  name     String
  age      String
  comment  String
  done     Boolean
  customId String
  doctorId String
  custom   Custumer @relation("customerOrder", fields: [customId], references: [id])
  doctor   Doctor   @relation("doctorOrdered", fields: [doctorId], references: [id])
}

model Thread {
  id        String   @id @default(uuid())
  customId  String
  nurfeId   String
  image     String[]
  name      String
  sex       String
  age       String
  createAt  DateTime @default(now())
  content   String
  custom    Custumer @relation("customerThread", fields: [customId], references: [id])
  comment   Thread   @relation("comment", fields: [id], references: [id])
  commentId Thread?  @relation("comment")
  nurfe     Nurfe    @relation("nurfeThread", fields: [nurfeId], references: [id])
}

model Profile {
  id              String        @id @default(uuid())
  customId        String
  createAt        DateTime      @default(now())
  title           String
  recomment       String[]
  content         String
  listExamination Examination[] @relation("profile")
  custom          Custumer      @relation("customerProfile", fields: [customId], references: [id])
}

model Examination {
  id        String   @id @default(uuid())
  createAt  DateTime @default(now())
  iamge     String[]
  title     String
  profileId String
  profile   Profile  @relation("profile", fields: [profileId], references: [id])
}

enum Sex {
  woman
  man
  not
}

enum Postion {
  doctor
  customer
  nurfe
}
